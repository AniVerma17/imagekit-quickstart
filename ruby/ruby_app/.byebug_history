c
ImageKitIo::Sdk::VERSION
ImageKitIo::Sdk::Version
ImageKitIo::SDK
ImageKitIo.methods
ImageKitIo
ImageKitIo.version
n
options
n
key
n
key
n
key
n
key
n
val
n
key
c
options
n
s
options
c
payload
c
payload
c
JSON.parse
err.http_code
err.response.to_s
err.response.body
err.response
response.message
err.response
err
c
resp
payload
headers
url
  resp = RestClient::Request.new(method: method,
                                       url: url,
                                       headers: headers,
                                       payload: payload).execute
n
s
c
 resp = RestClient::Request.new(method: method,
                                       url: url,
                                       headers: headers,
                                       payload: payload).execute
c
 resp = RestClient::Request.new(method: method,
                                       url: url,
                                       headers: headers,
                                       payload: payload).execute
n
s
payload
c
url
method
headers
payload
res
   resp = RestClient::Request.new(method: method,
                                       url: url,
                                       headers: headers,
                                       payload: payload).execute
n
s
payload
c
payload
paylaod
headers
resp
   resp = RestClient::Request.new(method: method,
                                       url: url,
                                       headers: headers,
                                       payload: payload).execute
c
url
resp.body
resp
   resp = RestClient::Request.new(method: method,
                                       url: url,
                                       headers: headers,
                                       payload: payload).execute
c
resp.body
resp
      resp = RestClient::Request.new(method: method,
                                       url: url,
                                       headers: headers,
                                       payload: payload).execute
payload
payload = payload.to_json
payload
resp.headers
resp.payload.headers
resp.payload.headers = resp.payload.headers.merge({'Content-Type'=> 'application/raw'})
resp.payload.
resp.payload.eaders
resp.payload.methods
resp.payload
resp.payload.to_s
resp.payload.to_json
resp.payload
resp.methods
resp.body
 resp = RestClient::Request.new(method: method,
                                       url: url,
                                       headers: headers,
                                       payload: payload)
 resp = RestClient::Request.new(method: method,
                                       url: url,
                                       headers: headers,
                                       payload: payload).execute
payload = payload.transform_keys(&:to_s)
payload.transform_keys(&:to_s)
payload
resp
res
payload
headers
url
method
 resp = RestClient::Request.new(method: method,
                                       url: url,
                                       headers: headers,
                                       payload: payload).execute
n
s
url
payload
c
request_formatter(options)
options
c
resp.body
        resp = RestClient::Request.new(method: method,
                                       url: url,
                                       headers: headers,
                                       payload: payload).execute
c
 resp = RestClient::Request.new(method: method,
                                       url: url,
                                       headers: headers,
                                       payload: payload).execute
c
resp.body
resp
  resp = RestClient::Request.new(method: method,
                                       url: url,
                                       headers: headers,
                                       payload: payload).execute
c
payload
resp
  resp = RestClient::Request.new(method: method,
                                       url: url,
                                       headers: headers,
                                       payload: payload).execute
c
options[:extensions]
options['extensions']
options
n
s
n
@req_obj.request("post", url, headers, payload)
url = "#{constants.BASE_URL}#{constants.UPLOAD}"
payload['customMetadata'].to_json
payload['customMetadata']
payload
exit
n
n 
n
constants.VALID_UPLOAD_OPTIONS
options
n
constants.VALID_UPLOAD_OPTIONS
key
n
key
c
key.to_s
constants.VALID_UPLOAD_OPTIONS
exit
continue
c
continue
c
ImageKitIo.constants
s
::ImageKitIo.constants
self
self.class
ImagekitIo.constants
self
base
c
constants
constants[4].class
constants[4]
constants.forth
constants.Constant
constants.TRANSFORMATION_POSITION
const.TRANSFORMATION_POSITION
ImageKitIo::Constant::TRANSFORMATION_POSITION
ImageKitIo::Constant.private_key
ImageKitIo::Constant.URL
ImageKitIo::Constant.test
ImageKitIo::Constant.TRANSOFRMATION_POSITION
ImageKitIo::Constant
constants
c
constants
constants.class
constants
s
ImageKitIo::Constant::TRANSFORMATION_POSITION
ImageKitIo.constants::TRANSFORMATION_POSITION
ImageKitIo.constants.TRANSFORMATION_POSITION
ImageKitIo.constants
c
constants.constants
constants
csonta
ImageKitIo::Constant.TRANSFORMATION_POSITION
ImageKitIo.config
IMAGEK
constants.TRANSFORMATION_POSITION
c
ImageKitIo.config
ImageKitIo::Constant.TRANSFORMATION_POSITION
ImageKitIo::Constant::TRANSFORMATION_POSITION
ImageKitIo::Constant
c
ImageKitIo.constants.get_class_variables
ImageKitIo.constants
constants
